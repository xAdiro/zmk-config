/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BSPC   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |     RAISE     | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
&kp GRAVE   &kp NUMBER_1  &kp N2            &kp N3        &kp N4  &kp N5                                                                &kp N6  &kp N7  &kp N8             &kp N9           &kp N0      &kp MINUS
&kp TAB     &kp Q         &kp W             &kp E         &kp R   &kp T   &kp CAPSLOCK                                   &mo 3          &kp Y   &kp U   &kp I              &kp O            &kp P       &kp EQUAL
&kp ESCAPE  &kp A         &kp S             &kp D         &kp F   &kp G   &kp LBKT                                       &kp RBKT       &kp H   &kp J   &kp K              &kp L            &kp SEMI    &kp SQT
&kp LSHFT   &kp Z         &kp X             &kp C         &kp V   &kp B   &kp LEFT_SHIFT  &kp LEFT_WIN    &kp RIGHT_ALT  &kp TAB        &kp N   &kp M   &kp COMMA          &kp DOT          &kp FSLH    &kp RSHFT
&kp C_PREV  &kp C_NEXT    &kp C_PLAY_PAUSE  &kp LEFT_ALT  &mo 1           &kp LCTRL       &kp SPACE       &kp ENTER      &kp BACKSPACE          &mo 2   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &kp C_MENU
            >;
        };

        symbols_numpad_layer {
            bindings = <
&trans  &kp F1           &kp F2        &kp F3     &kp F4                &kp F5                                                           &kp F6           &kp F7           &kp F8           &kp F9           &kp F10        &kp F11
&trans  &kp EXCLAMATION  &kp AT        &kp HASH   &kp LBKT              &kp RBKT               &trans                    &kp KP_NUMLOCK  &kp KP_ASTERISK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS   &kp F12
&trans  &kp DOLLAR       &kp PERCENT   &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                    &trans          &kp KP_SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS    &kp F13
&trans  &kp AMPERSAND    &kp ASTERISK  &kp MINUS  &kp EQUAL             &trans                 &trans  &trans    &trans  &trans          &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp BACKSLASH  &kp F14
&trans  &trans           &trans        &trans     &trans                                       &trans  &trans    &trans  &kp DELETE                       &trans           &kp KP_N0        &kp F17          &kp F16        &kp F15
            >;
        };

        arrows_layer {
            bindings = <
&trans           &trans    &trans      &trans   &trans  &trans                                           &trans          &trans          &trans        &trans     &trans  &trans
&kp PRINTSCREEN  &trans    &trans      &trans   &trans  &trans  &kp PAGE_UP                      &trans  &trans          &trans          &trans        &trans     &trans  &trans
&kp SCROLLLOCK   &trans    &trans      &trans   &trans  &trans  &kp PAGE_DOWN                    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&kp PAUSE_BREAK  &trans    &trans      &trans   &trans  &trans  &trans         &trans    &trans  &trans  &trans          &trans          &trans        &trans     &trans  &trans
&kp INSERT       &kp HOME  &kp DELETE  &kp END  &trans          &trans         &trans    &trans  &trans                  &trans          &trans        &trans     &trans  &trans
            >;
        };

        config_layer {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                                                 &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans                          &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR_ALL  &trans         &trans         &trans         &trans         &out OUT_BLE                    &out OUT_USB  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans         &bt BT_CLR     &trans         &trans         &trans        &trans    &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans         &trans         &trans                        &trans        &trans    &trans  &trans                &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};

